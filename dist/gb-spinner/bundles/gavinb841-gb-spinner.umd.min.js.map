{"version":3,"sources":["ng://@gavinb841/gb-spinner/lib/gb-spinner.service.ts","ng://@gavinb841/gb-spinner/lib/gb-spinner.component.ts","ng://@gavinb841/gb-spinner/lib/gb-spinner.module.ts"],"names":["GbSpinnerService","prototype","show","text","this","spinnerCounter","spinnerComponent","hide","registerComponent","component","Injectable","args","providedIn","name","GbSpinnerComponent","getText","ngOnInit","isShown","spinner","isDisabled","Component","selector","template","GbSpinnerModule","NgModule","declarations","imports","exports"],"mappings":"qTAAA,IAAAA,GAeEA,EAAAC,UAAAC,KAAA,SAAKC,QAAA,IAAAA,IAAAA,EAAA,MACHC,KAAKC,gBAAkB,EACnBD,KAAKE,kBACPF,KAAKE,iBAAiBJ,KAAKC,IAI/BH,EAAAC,UAAAM,KAAA,WACEH,KAAKC,gBAAkB,EACnBD,KAAKC,gBAAkB,IACzBD,KAAKC,eAAiB,EAClBD,KAAKE,kBACPF,KAAKE,iBAAiBC,SAK5BP,EAAAC,UAAAO,kBAAA,SAAkBC,GAChBL,KAAKE,iBAAmBG,uBA/B3BC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,uJAOZ,SAAAZ,IACEI,KAAKS,KAAO,UACZT,KAAKC,eAAiB,ECZ1B,IAAAS,GAyBSA,EAAAC,QAAP,SAAeZ,GACb,OAAOA,GAAQ,eASjBW,EAAAb,UAAAe,SAAA,WACEZ,KAAKD,KAAOW,EAAmBC,QAAQX,KAAKD,MAC5CC,KAAKa,SAAU,EACfb,KAAKc,QAAQV,kBAAkBJ,OAGjCU,EAAAb,UAAAC,KAAA,SAAKC,GACHC,KAAKD,KAAOW,EAAmBC,QAAQZ,GACvCC,KAAKa,SAAU,GAGjBH,EAAAb,UAAAM,KAAA,WACEH,KAAKe,YAAa,EAClBf,KAAKa,SAAU,uBA7ClBG,EAAAA,UAAST,KAAA,CAAC,CACTU,SAAU,aACVC,SAAU,ooDAJHtB,KAkDTc,GAtBE,SAAAA,EAAoBI,GAAAd,KAAAc,QAAAA,EAClBd,KAAKS,KAAO,UACZT,KAAKD,KAAOW,EAAmBC,QAAQX,KAAKD,MAC5CC,KAAKa,SAAU,EChCnB,IAAAM,uBAGCC,EAAAA,SAAQb,KAAA,CAAC,CACRc,aAAc,CAACX,GACfY,QAAS,GAETC,QAAS,CAACb,OAEmBS,GAN/B,SAAAA","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GbSpinnerService {\n  name: string;\n  private spinnerCounter: number;\n  private spinnerComponent: any;\n\n  constructor() {\n    this.name = 'spinner';\n    this.spinnerCounter = 0;\n  }\n\n  show(text = null) {\n    this.spinnerCounter += 1;\n    if (this.spinnerComponent) {\n      this.spinnerComponent.show(text);\n    }\n  }\n\n  hide() {\n    this.spinnerCounter -= 1;\n    if (this.spinnerCounter <= 0) {\n      this.spinnerCounter = 0;\n      if (this.spinnerComponent) {\n        this.spinnerComponent.hide();\n      }\n    }\n  }\n\n  registerComponent(component: any) {\n    this.spinnerComponent = component;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { GbSpinnerService } from './gb-spinner.service';\n\n@Component({\n  selector: 'gb-spinner',\n  template: `\n      <div class=\"gb-spinner\" [hidden]=\"!isShown\">\n          <div class=\"gb-spinner-modal\" role=\"dialog\" index=\"0\" tabindex=\"-1\">\n              <div class=\"gb-spinner-dialog\">\n                  <div class=\"gb-spinner-icon\"></div>\n                  <div class=\"gb-spinner-text\" [innerHTML]=\"text\"></div>\n              </div>\n          </div>\n          <div class=\"gb-spinner-backdrop\"></div>\n      </div>\n  `,\n  styleUrls: ['gb-spinner.component.scss']\n})\nexport class GbSpinnerComponent implements OnInit {\n\n  name: string;\n  text: string;\n  isShown: boolean;\n  isDisabled: boolean;\n\n  static getText(text) {\n    return text || 'Loading ...';\n  }\n\n  constructor(private spinner: GbSpinnerService) {\n    this.name = 'spinner';\n    this.text = GbSpinnerComponent.getText(this.text);\n    this.isShown = false;\n  }\n\n  ngOnInit(): void {\n    this.text = GbSpinnerComponent.getText(this.text);\n    this.isShown = false;\n    this.spinner.registerComponent(this);\n  }\n\n  show(text) {\n    this.text = GbSpinnerComponent.getText(text);\n    this.isShown = true;\n  }\n\n  hide() {\n    this.isDisabled = false;\n    this.isShown = false;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { GbSpinnerComponent } from './gb-spinner.component';\n\n@NgModule({\n  declarations: [GbSpinnerComponent],\n  imports: [\n  ],\n  exports: [GbSpinnerComponent]\n})\nexport class GbSpinnerModule { }\n"]}